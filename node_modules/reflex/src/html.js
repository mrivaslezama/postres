/* @flow */

import { Node } from "reflex-driver"
import type { Properties } from "reflex-driver"
import { element } from "./dom"

type Element = (
  properties: ?Properties,
  children: ?Array<string | Node>
) => Node

export type Html = {
  a: Element,
  abbr: Element,
  address: Element,
  area: Element,
  article: Element,
  aside: Element,
  audio: Element,
  b: Element,
  base: Element,
  bdi: Element,
  bdo: Element,
  big: Element,
  blockquote: Element,
  body: Element,
  br: Element,
  button: Element,
  canvas: Element,
  caption: Element,
  cite: Element,
  code: Element,
  col: Element,
  colgroup: Element,
  data: Element,
  datalist: Element,
  dd: Element,
  del: Element,
  details: Element,
  dfn: Element,
  dialog: Element,
  div: Element,
  dl: Element,
  dt: Element,
  em: Element,
  embed: Element,
  fieldset: Element,
  figcaption: Element,
  figure: Element,
  footer: Element,
  form: Element,
  h1: Element,
  h2: Element,
  h3: Element,
  h4: Element,
  h5: Element,
  h6: Element,
  head: Element,
  header: Element,
  hr: Element,
  html: Element,
  i: Element,
  iframe: Element,
  img: Element,
  input: Element,
  ins: Element,
  kbd: Element,
  keygen: Element,
  label: Element,
  legend: Element,
  li: Element,
  link: Element,
  main: Element,
  map: Element,
  mark: Element,
  menu: Element,
  menuitem: Element,
  meta: Element,
  meter: Element,
  nav: Element,
  noscript: Element,
  object: Element,
  ol: Element,
  optgroup: Element,
  option: Element,
  output: Element,
  p: Element,
  param: Element,
  picture: Element,
  pre: Element,
  progress: Element,
  q: Element,
  rp: Element,
  rt: Element,
  ruby: Element,
  s: Element,
  samp: Element,
  script: Element,
  section: Element,
  select: Element,
  small: Element,
  source: Element,
  span: Element,
  strong: Element,
  style: Element,
  sub: Element,
  summary: Element,
  sup: Element,
  table: Element,
  tbody: Element,
  td: Element,
  textarea: Element,
  tfoot: Element,
  th: Element,
  thead: Element,
  time: Element,
  title: Element,
  tr: Element,
  track: Element,
  u: Element,
  ul: Element,
  var: Element,
  video: Element,
  wbr: Element,
  circle: Element,
  clipPath: Element,
  defs: Element,
  ellipse: Element,
  g: Element,
  line: Element,
  linearGradient: Element,
  mask: Element,
  path: Element,
  pattern: Element,
  polygon: Element,
  polyline: Element,
  radialGradient: Element,
  rect: Element,
  stop: Element,
  svg: Element,
  text: Element,
  tspan: Element
}

export const html: Html = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "g",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
].reduce((html, tagName) => {
  const create: Element = (properties, children) =>
    element(tagName, properties, children)

  html[tagName] = create
  return html
}, ((Object.create(null): any): Html))
